/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        WinShiftDance: WinShiftDance {
            compatible = "zmk,behavior-tap-dance";
            label = "WINSHIFTDANCE";
            #binding-cells = <0>;
            bindings = <&mt LEFT_SHIFT LWIN>, <&kp LWIN>;
        };

        LayerModTap: LayerModTap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERMODTAP";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        dash_dance: dash_dance {
            compatible = "zmk,behavior-hold-tap";
            label = "DASH_DANCE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&em_dash>, <&kp>;
        };
    };

        dance: dance {
            compatible = "zmk,behavior-hold-tap";
            label = "DANCE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
        };

    macros {
        em_dash: em_dash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0>,
                <&macro_tap>,
                <&kp KP_N1>,
                <&macro_tap>,
                <&kp KP_N5>,
                <&macro_tap>,
                <&kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;

            label = "EM_DASH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "base";
            bindings = <
&none  &kp Q         &kp W          &kp E           &kp R           &kp T                   &kp Y           &kp U           &kp I       &kp O       &kp P            &none
&none  &hm LSHIFT A  &hm LGUI S     &hm LALT D      &hm LCTRL F     &kp G                   &kp H           &hm RCTRL J     &hm RALT K  &hm RGUI L  &hm RSHIFT SEMI  &gresc
&none  &kp Z         &kp X          &kp C           &kp V           &kp B                   &kp N           &kp M           &kp COMMA   &kp DOT     &kp FSLH         &none
                                    &lt 1 TAB       &lt 2 ENTER     &mt LCTRL BACKSPACE     &lt 4 SPACE     &lt 1 TAB       &lt 2 DEL
            >;
        };

        f-numbers {
            label = "f-num";
            bindings = <
&trans  &kp F10  &kp F7  &kp F8  &kp F9  &none     &kp KP_PLUS   &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MULTIPLY   &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &none     &kp KP_MINUS  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_DIVIDE     &kp KP_EQUAL
&trans  &kp F12  &kp F1  &kp F2  &kp F3  &none     &kp KP_N0     &kp KP_N1  &kp KP_N2  &kp KP_N3  &mt COMMA PERIOD  &trans
                         &trans  &trans  &trans    &trans        &trans     &mo 1
            >;
        };

        symbols {
            label = "sym";
            bindings = <
&trans  &kp EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET            &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp BSLH
&trans  &kp GRAVE  &kp LBRC  &kp LBKT  &kp LPAR  &kp EQUAL    &dash_dance 0 MINUS  &none     &none     &none     &trans    &trans
&trans  &kp TILDE  &kp RBRC  &kp RBKT  &kp RPAR  &kp PLUS     &kp UNDER            &none     &none     &none     &none     &trans
                             &trans    &trans    &trans       &trans               &trans    &trans
            >;
        };

        navigation {
            label = "nav";
            bindings = <
&trans  &none  &none     &none             &none              &none      &kp PRINTSCREEN  &none     &none   &none      &trans  &trans
&trans  &none  &kp HOME  &kp PG_UP         &kp PG_DN          &kp END    &kp LEFT         &kp DOWN  &kp UP  &kp RIGHT  &none   &none
&trans  &none  &none     &kp LG(LC(LEFT))  &kp LC(LG(RIGHT))  &none      &none            &none     &none   &none      &none   &trans
                         &trans            &trans             &trans     &trans           &trans    &none
            >;
        };

        board {
            label = "keeb";
            bindings = <
&kp CAPS  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &kp KP_NLCK  &none         &none       &none         &none  &bt BT_CLR
&none     &none          &none          &none          &none          &none            &none        &kp C_PREV    &kp C_PP    &kp C_NEXT    &none  &bt BT_PRV
&none     &none          &none          &none          &none          &none            &none        &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &none  &bt BT_NXT
                                        &none          &none          &none            &none        &none         &mo 1
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        keeb {
            if-layers = <2 1>;
            then-layer = <4>;
        };
    };
};
